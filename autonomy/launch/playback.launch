<?xml version="1.0"?>
<launch>
  <arg name="gps_piksi" default="false"/>
  <arg name="gps_port" default="/dev/ttyUSB2"/>
  <arg name="imu_ms" default="true"/>
  <arg name="imu_port" default="/dev/ttyACM2"/>
  <arg name="ur5_enabled" default="true"/>
  <arg name="sawyer_enabled" default="false"/>
  <arg name="velodyne_enabled" default="true"/>
  <arg name="hokuyo_enabled" default="false"/>
  <arg name="ee_mbzirc" default="true"/>
  <arg name="ee_mbzirc_port" default="/dev/ttyUSB0"/>
  <arg name="ee_mbzirc_cam_port" default="/dev/video0"/>
  <arg name="ee_mbzirc_cam_width" default="960"/>
  <arg name="ee_mbzirc_cam_height" default="540"/>
  <arg name="ee_mbzirc_cam_frame" default="usb_cam"/>
  <arg name="ee_mbzirc_cam_autofocus" default="false"/>
  <arg name="ee_mbzirc_cam_focus" default="20"/>
  <arg name="ee_mbzirc_cam_fps" default="5"/>
  <arg name="publish_odom" default="true"/>
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="joystick" default="true" />
  <arg name="rviz_enabled" default="true"/>
  <arg name="rviz_cfg" default="$(find trex_description)/rviz/trex.rviz"/>
  
  <arg name="calibration" default="$(find but_velodyne_proc)/config/32db.yaml" />
  <arg name="min_z" default="-2.0"/>
  <arg name="max_z" default="2.00"/>
  <arg name="min_range" default="0.60"/>
  <arg name="frame_id" default="velodyne_link"/>
  <arg name="topic" default="scan/long_range"/>

  <!--node name="velodyne2_tf" pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0.1 0 0 velodyne_link velodyne_link2 100"
  /-->

  <!-- Load URDF with specified accessories -->
  <!--include file="$(find trex_description)/launch/description.launch">
    <arg name="sawyer_enabled" value="$(arg sawyer_enabled)"/>
    <arg name="ur5_enabled" value="$(arg ur5_enabled)"/>
    <arg name="velodyne_enabled" value="$(arg velodyne_enabled)"/>
  </include-->

  <!-- Accessories Launch -->
  <!--node pkg="autonomy" type="playback.sh" name="playback"/-->
  <node pkg="autonomy" type="findbox.py" name="findbox"/>

  <!-- Velodyne LIDAR -->
 <!-- Run point cloud collapser -->
  <!--include file="$(find but_velodyne_proc)/launch/laserscan_node.launch">
    <arg name="min_z" value="$(arg min_z)"/>
    <arg name="max_z" value="$(arg max_z)"/>
    <arg name="min_range" value="$(arg min_range)"/>
    <arg name="frame_id" value="$(arg frame_id)"/>
    <arg name="topic" value="$(arg topic)"/>
    <arg name="node_name" value="autonomy_scan"/>
    <arg name="angular_res" value="0.5" />
  </include-->


  <node pkg="but_velodyne_proc" type="laser_scan" name="but_velodyne_proc_laserscan_node" output="screen">
    <remap from="points_in" to="/velodyne_points" />
    <remap from="scan_out" to="$(arg topic)" />
    <param name="min_z" value="$(arg min_z)" />
    <param name="max_z" value="$(arg max_z)" />
    <param name="angular_res" value="0.5" />
    <param name="min_range" value="20.0" />
    <param name="frame_id" value="$(arg frame_id)" />
  </node>


  <!-- Publish Odometry -->
  <group if="$(arg publish_odom)">
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" >
      <rosparam command="load" file="$(find trex_control)/config/localization.yaml" />
    </node>
  </group>

  <!-- PUBLISH JOINT STATES -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /-->

  <!-- RVIZ -->
  <group if="$(arg rviz_enabled)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_cfg)" output="screen"/>
  </group>


</launch>
